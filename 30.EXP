#include <stdio.h>
#include <pthread.h>

void *thread_function(void *arg) {
    printf("This is a thread.\n");
    pthread_exit(NULL);
}

int main() {
    pthread_t thread_id;
    pthread_create(&thread_id, NULL, thread_function, NULL);
    printf("Main thread: Created a new thread with ID %ld\n", (long)thread_id);
    pthread_join(thread_id, NULL);
    return 0;
}
#include <stdio.h>
#include <pthread.h>

void *thread_function(void *arg) {
    printf("This is a thread.\n");
    return NULL;
}

int main() {
    pthread_t thread_id;
    pthread_create(&thread_id, NULL, thread_function, NULL);
    printf("Main thread: Created a new thread with ID %ld\n", (long)thread_id);
    pthread_join(thread_id, NULL);
    printf("Main thread: Joined the new thread.\n");
    return 0;
}
#include <stdio.h>
#include <pthread.h>

int main() {
    pthread_t thread1, thread2;

    pthread_create(&thread1, NULL, NULL, NULL);
    pthread_create(&thread2, NULL, NULL, NULL);

    if (pthread_equal(thread1, thread2)) {
        printf("Thread 1 and Thread 2 are equal.\n");
    } else {
        printf("Thread 1 and Thread 2 are not equal.\n");
    }

    pthread_exit(NULL);
}
#include <stdio.h>
#include <pthread.h>

void *thread_function(void *arg) {
    printf("This is a thread.\n");
    pthread_exit(NULL);
}

int main() {
    pthread_t thread_id;
    pthread_create(&thread_id, NULL, thread_function, NULL);
    printf("Main thread: Created a new thread with ID %ld\n", (long)thread_id);
    pthread_join(thread_id, NULL);
    printf("Main thread: Joined the new thread.\n");
    printf("Main thread: Exiting.\n");
    pthread_exit(NULL);
}
