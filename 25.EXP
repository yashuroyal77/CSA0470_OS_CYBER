#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <dirent.h>

int main() {
    // Demonstrate fcntl to set a file descriptor to non-blocking
    int fd = open("sample.txt", O_RDONLY);
    if (fd == -1) {
        perror("open");
        exit(1);
    }

    int flags = fcntl(fd, F_GETFL);
    flags |= O_NONBLOCK;
    fcntl(fd, F_SETFL, flags);

    printf("File descriptor %d set to non-blocking.\n", fd);

    // Close the file
    close(fd);

    // Demonstrate lseek to seek to a specific position in a file
    fd = open("sample.txt", O_RDONLY);
    if (fd == -1) {
        perror("open");
        exit(1);
    }

    off_t offset = lseek(fd, 10, SEEK_SET);
    if (offset == -1) {
        perror("lseek");
        close(fd);
        exit(1);
    }

    printf("Seeked to position 10 in the file.\n");

    // Close the file
    close(fd);

    // Demonstrate stat to get file information
    struct stat file_info;
    if (stat("sample.txt", &file_info) == -1) {
        perror("stat");
        exit(1);
    }

    printf("File size: %ld bytes\n", file_info.st_size);

    // Demonstrate opendir and readdir to list directory contents
    DIR *dir = opendir(".");
    if (dir == NULL) {
        perror("opendir");
        exit(1);
    }

    struct dirent *entry;
    printf("Directory Contents:\n");
    while ((entry = readdir(dir)) != NULL) {
        printf("%s\n", entry->d_name);
    }

    closedir(dir);

    return 0;
}
